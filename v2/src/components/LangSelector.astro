---
import World from '../assets/icons/world.svg';
import {LANGUAGES,LANGUAGES_KEYS,DEFAULT_LANG} from "../i18n/utils";
import type {UiType} from "../i18n/utils";

// Benzersiz ID olu≈ütur
const uniqueId = `lang-selector-${Math.random().toString(36).substr(2, 9)}`;
const optionsId = `lang-options-${Math.random().toString(36).substr(2, 9)}`;
---

<div id={uniqueId} class="dropdown dropdown-end lang-selector" data-languages={JSON.stringify(LANGUAGES_KEYS)} data-default-lang={DEFAULT_LANG}>
  <div tabindex="0" role="button" class="btn m-1">
    <World width="24" height="24" />
  </div>
  <ul
    tabindex="0"
    class="dropdown-content menu bg-base-100 rounded-box z-1 w-32 p-2 shadow-sm"
    id={optionsId}
  >
    {
      LANGUAGES_KEYS.map((key: UiType) => (
        <li>
          <a href="#" data-lang={key} class="lang-option">{LANGUAGES[key]}</a>
        </li>
      ))
    }
  </ul>
</div>

<!-- üîΩ Dil se√ßimi i√ßin client-side script -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    // T√ºm lang-selector sƒ±nƒ±fƒ±na sahip elementleri bul
    const containers = document.querySelectorAll(".lang-selector");
    
    containers.forEach((container) => {
      if (!container) return;
      
      const langButtons = container.querySelectorAll(".lang-option");
      const languages = JSON.parse(container.getAttribute("data-languages"));
      const defaultLang = container.getAttribute("data-default-lang");
      const savedLang = localStorage.getItem("preferredLanguage") ?? defaultLang;

      // Sayfa y√ºklenirken kaydedilen dile y√∂nlendir
      const currentPath = window.location.pathname;
      const pathParts = currentPath.split('/').filter(part => part !== '');
      const currentLang = pathParts.length > 0 && languages.includes(pathParts[0]) ? pathParts[0] : defaultLang;
      const hasLangInPath = pathParts.length > 0 && languages.includes(pathParts[0]);

      // Yalnƒ±zca URL dil i√ßermiyorsa otomatik y√∂nlendir ve her zaman dil prefiksi ekle
      if (!hasLangInPath && savedLang !== currentLang) {
        const restParts = hasLangInPath ? pathParts.slice(1) : pathParts;
        const restPath = restParts.join('/');
        let newPath = `/${savedLang}`;
        if (restPath) newPath += `/${restPath}`;
        window.location.href = newPath;
        return;
      }

      langButtons.forEach((btn) => {
        btn.addEventListener("click", (e) => {
          e.preventDefault();
          const selectedLang = btn.getAttribute("data-lang") ?? defaultLang;
          localStorage.setItem("preferredLanguage", selectedLang);
          const currentPath = window.location.pathname;
          const parts = currentPath.split('/').filter(p => p !== '');
          const restParts = parts.length > 0 && languages.includes(parts[0]) ? parts.slice(1) : parts;
          const restPath = restParts.join('/');
          let newPath = `/${selectedLang}`;
          if (restPath) newPath += `/${restPath}`;
          window.location.href = newPath;
        });
      });
    });
  });
</script>

