---
import { getBlogPosts } from "../../../content/config";
import type { CollectionEntry } from "astro:content";
import PostCard from "../../../components/PostCard.astro";
import Layout from "../../../layouts/Layout.astro";
import { useTranslations, type UiType, LANGUAGES_KEYS } from "../../../i18n/utils";
import type { PaginateFunction } from "astro";

const lang = Astro.params.lang as UiType;
const t = useTranslations(lang );

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const PAGE_SIZE = 2;
  const _posts = await getBlogPosts();
  return LANGUAGES_KEYS.flatMap((lang) => {
    const posts_filtered = _posts
      ?.filter((blog: CollectionEntry<"blog">) => {
        return blog?.data?.lang === lang;
      })
      .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
    return paginate(posts_filtered, { params: { lang }, pageSize: PAGE_SIZE });
  });
}

const { page } = Astro.props;
---

<Layout title="Blog" description="Blog" lang={lang}>
  <section id="posts-list">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      {
        page.data.map((post) => (
          <PostCard post={post} lang={lang} />
        ))
      }
    </div>
    <div class="flex justify-center mt-8">
      <div class="join">
        {
          page.url.first ? (
            <a href={page.url.first} class="join-item btn btn-sm">
              {t['pagination.first']}
            </a>
          ) : (
            <button class="join-item btn btn-sm btn-disabled" disabled>
              {t['pagination.first']}
            </button>
          )
        }
        {
          page.url.prev ? (
            <a href={page.url.prev} class="join-item btn btn-sm">
              {t['pagination.prev']}
            </a>
          ) : (
            <button class="join-item btn btn-sm btn-disabled" disabled>
              {t['pagination.prev']}
            </button>
          )
        }
        <span class="join-item btn btn-sm btn-ghost">
          {t['page']} {page.currentPage}/{page.lastPage}
        </span>
        {
          page.url.next ? (
            <a href={page.url.next} class="join-item btn btn-sm">
              {t['pagination.next']}
            </a>
          ) : (
            <button class="join-item btn btn-sm btn-disabled" disabled>
              {t['pagination.next']}
            </button>
          )
        }
        {
          page.url.last ? (
            <a href={page.url.last} class="join-item btn btn-sm">
              {t['pagination.last']}
            </a>
          ) : (
            <button class="join-item btn btn-sm btn-disabled" disabled>
              {t['pagination.last']}
            </button>
          )
        }
      </div>
    </div>
  </section>
</Layout>
